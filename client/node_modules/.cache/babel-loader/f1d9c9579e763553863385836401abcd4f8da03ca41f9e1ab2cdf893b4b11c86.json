{"ast":null,"code":"var _jsxFileName = \"E:\\\\EchoesofCulture\\\\client\\\\src\\\\pages\\\\Languages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Languages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Languages = ({\n  onAdd\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [origin, setOrigin] = useState('');\n  const [family, setFamily] = useState('');\n  const [status, setStatus] = useState('');\n\n  //const [created_at, setDate] = useState(''); // To display success/error messages\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate if the species already exists\n    try {\n      const checkResponse = await fetch(`http://localhost:5000/Language_API/languages/check?name=${encodeURIComponent(name)}`);\n      console.log(checkResponse);\n      if (checkResponse.ok) {\n        const exists = await checkResponse.json();\n        console.log(exists);\n        if (exists.exists) {\n          setMessage('Language already exists. Please add a different species.');\n          return; // Exit if species already exists\n        } else {\n          // Species does not exist, proceed to add it\n\n          try {\n            const payload = {\n              name,\n              origin,\n              family,\n              status\n            }; //, created_at\n            const response = await fetch('http://localhost:5000/Language_API/languages', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n            });\n            console.log(response);\n            if (response.ok) {\n              const data = await response.json();\n              setMessage('Language added successfully!');\n              onAdd(data); // Optionally, update parent state\n            } else {\n              const errorText = await response.text(); // Capture server error message if available\n              setMessage(`Failed to add Language. Server returned: ${errorText}`);\n            }\n          } catch (error) {\n            console.error('Error adding Language:', error);\n            setMessage('An error occurred while adding the Language.');\n          }\n\n          // Reset form fields after successful submission\n          setName('');\n          setOrigin('');\n          setFamily('');\n          setStatus('');\n\n          // setDate('');\n        }\n      } else {\n        const errorText = await checkResponse.text(); // Capture server error message if available\n        setMessage(`Failed to validate Language. Server returned: ${errorText}`);\n        return;\n      }\n    } catch (error) {\n      console.error('Error validating Language:', error);\n      setMessage('An error occurred during validation.');\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-species-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-species-form\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Language Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Origin\",\n        value: origin,\n        onChange: e => setOrigin(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Family\",\n        value: family,\n        onChange: e => setFamily(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Status\",\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Languages, \"pzupUw2akqo05M7Xj9bQQrQP4NQ=\");\n_c = Languages;\nexport default Languages;\n/* <div className=\"tribes-container\">\r\n      <h1>Tribes</h1>\r\n      <ul>\r\n        {tribes.map((tribe) => (\r\n          <li key={tribe.id}>\r\n            <h2>{tribe.name}</h2>\r\n            <p>{tribe.description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>*/\n/*<input\r\n    type=\"date\"\r\n    value={created_at}\r\n    onChange={(e) => setDate(e.target.value)}  // Capture the URL instead of file\r\n    placeholder=\"date\"\r\n    required\r\n  />*/\nvar _c;\n$RefreshReg$(_c, \"Languages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Languages","onAdd","_s","name","setName","origin","setOrigin","family","setFamily","status","setStatus","message","setMessage","handleSubmit","e","preventDefault","checkResponse","fetch","encodeURIComponent","console","log","ok","exists","json","payload","response","method","headers","body","JSON","stringify","data","errorText","text","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/EchoesofCulture/client/src/pages/Languages.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/Languages.css';\r\n\r\nconst Languages = ({ onAdd }) => {\r\n  const [name, setName] = useState('');\r\n  const [origin, setOrigin] = useState('');\r\n  const [family, setFamily] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  \r\n  //const [created_at, setDate] = useState(''); // To display success/error messages\r\n  const [message, setMessage] = useState(''); \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Validate if the species already exists\r\n    try {\r\n      const checkResponse = await fetch(`http://localhost:5000/Language_API/languages/check?name=${encodeURIComponent(name)}`);\r\n      console.log(checkResponse);\r\n      if (checkResponse.ok) {\r\n        const exists = await checkResponse.json();\r\n        console.log(exists);\r\n        if (exists.exists) {\r\n          setMessage('Language already exists. Please add a different species.');\r\n          return;  // Exit if species already exists\r\n        } else {\r\n          // Species does not exist, proceed to add it\r\n     \r\n          try {\r\n            const payload = { name, origin,family, status};//, created_at\r\nconst response = await fetch('http://localhost:5000/Language_API/languages', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify(payload),\r\n});\r\n\r\n           \r\n            console.log(response);\r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              setMessage('Language added successfully!');\r\n              onAdd(data); // Optionally, update parent state\r\n            } else {\r\n              const errorText = await response.text(); // Capture server error message if available\r\n              setMessage(`Failed to add Language. Server returned: ${errorText}`);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error adding Language:', error);\r\n            setMessage('An error occurred while adding the Language.');\r\n          }\r\n  \r\n          // Reset form fields after successful submission\r\n          setName('');\r\n          setOrigin('');\r\n          setFamily('');\r\n          setStatus('');\r\n          \r\n         // setDate('');\r\n        }\r\n      } else {\r\n        const errorText = await checkResponse.text(); // Capture server error message if available\r\n        setMessage(`Failed to validate Language. Server returned: ${errorText}`);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error validating Language:', error);\r\n      setMessage('An error occurred during validation.');\r\n      return;\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"add-species-form-container\">\r\n      <h2>Add a New Language</h2>\r\n      <form onSubmit={handleSubmit} className=\"add-species-form\" encType=\"multipart/form-data\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Language Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Origin\"\r\n          value={origin}\r\n          onChange={(e) => setOrigin(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Family\"\r\n          value={family}\r\n          onChange={(e) => setFamily(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Status\"\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          required\r\n        ></textarea>\r\n       \r\n        <button type=\"submit\">Add Language</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Languages;\r\n/* <div className=\"tribes-container\">\r\n      <h1>Tribes</h1>\r\n      <ul>\r\n        {tribes.map((tribe) => (\r\n          <li key={tribe.id}>\r\n            <h2>{tribe.name}</h2>\r\n            <p>{tribe.description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>*/\r\n      /*<input\r\n          type=\"date\"\r\n          value={created_at}\r\n          onChange={(e) => setDate(e.target.value)}  // Capture the URL instead of file\r\n          placeholder=\"date\"\r\n          required\r\n        />*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}