{"ast":null,"code":"var _jsxFileName = \"E:\\\\EchoesofCulture\\\\client\\\\src\\\\pages\\\\Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TribeCard from '../components/TribeCard'; // Assuming you have a TribeCard component\nimport LanguageCard from '../components/LanguageCard'; // Assuming you have a LanguageCard component\nimport '../styles/Learn.css'; // Add styles for Learn page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Learn = () => {\n  _s();\n  const [tribesList, setTribes] = useState([]);\n  const [languagesList, setLanguages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Fetch tribes and languages data\n    const fetchTribesAndLanguages = async () => {\n      try {\n        // Fetch tribes\n        const tribesResponse = await fetch('http://localhost:5000/Tribe_API/tribes/tribe');\n        if (!tribesResponse.ok) throw new Error('Failed to fetch tribes');\n        const tribesData = await tribesResponse.json();\n        setTribes(tribesData.tribes);\n\n        // Fetch languages\n        const languagesResponse = await fetch('http://localhost:5000/Language_API/languages/lang');\n        if (!languagesResponse.ok) throw new Error('Failed to fetch languages');\n        const languagesData = await languagesResponse.json();\n        setLanguages(languagesData.languages);\n      } catch (error) {\n        setMessage('An error occurred while fetching data.');\n        console.error('Error:', error);\n      }\n    };\n    fetchTribesAndLanguages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Learn About Tribes and Languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tribe-language-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tribes-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tribes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), console.log('speciesList:', tribes), console.log('Is speciesList an array?', Array.isArray(tribes)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-container\",\n          children: tribes.length > 0 ? tribes.map(tribe => /*#__PURE__*/_jsxDEV(TribeCard, {\n            tribe: tribe\n          }, tribe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 38\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tribes found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"languages-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), console.log('speciesList:', languages), console.log('Is speciesList an array?', Array.isArray(languages)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-container\",\n          children: languages.length > 0 ? languages.map(language => /*#__PURE__*/_jsxDEV(LanguageCard, {\n            language: language\n          }, language.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 44\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No languages found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Learn, \"GbH/g+dAVagpI56CpJI5whyBcxA=\");\n_c = Learn;\nexport default Learn;\nvar _c;\n$RefreshReg$(_c, \"Learn\");","map":{"version":3,"names":["React","useState","useEffect","TribeCard","LanguageCard","jsxDEV","_jsxDEV","Learn","_s","tribesList","setTribes","languagesList","setLanguages","message","setMessage","fetchTribesAndLanguages","tribesResponse","fetch","ok","Error","tribesData","json","tribes","languagesResponse","languagesData","languages","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","log","Array","isArray","length","map","tribe","id","language","_c","$RefreshReg$"],"sources":["E:/EchoesofCulture/client/src/pages/Learn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TribeCard from '../components/TribeCard'; // Assuming you have a TribeCard component\r\nimport LanguageCard from '../components/LanguageCard'; // Assuming you have a LanguageCard component\r\nimport '../styles/Learn.css'; // Add styles for Learn page\r\n\r\nconst Learn = () => {\r\n  const [tribesList, setTribes] = useState([]);\r\n  const [languagesList, setLanguages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch tribes and languages data\r\n    const fetchTribesAndLanguages = async () => {\r\n      try {\r\n        // Fetch tribes\r\n        const tribesResponse = await fetch('http://localhost:5000/Tribe_API/tribes/tribe');\r\n        if (!tribesResponse.ok) throw new Error('Failed to fetch tribes');\r\n        const tribesData = await tribesResponse.json();\r\n        setTribes(tribesData.tribes);\r\n\r\n        // Fetch languages\r\n        const languagesResponse = await fetch('http://localhost:5000/Language_API/languages/lang');\r\n        if (!languagesResponse.ok) throw new Error('Failed to fetch languages');\r\n        const languagesData = await languagesResponse.json();\r\n        setLanguages(languagesData.languages);\r\n      } catch (error) {\r\n        setMessage('An error occurred while fetching data.');\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchTribesAndLanguages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"learn-container\">\r\n      <h1>Learn About Tribes and Languages</h1>\r\n      {message && <p>{message}</p>}\r\n\r\n      <div className=\"tribe-language-grid\">\r\n        {/* Display tribes */}\r\n        <div className=\"tribes-section\">\r\n          <h2>Tribes</h2>\r\n          {console.log('speciesList:', tribes)}\r\n          {console.log('Is speciesList an array?', Array.isArray(tribes))}\r\n          <div className=\"cards-container\">\r\n            {tribes.length > 0 ? (\r\n              tribes.map((tribe) => (<TribeCard key={tribe.id} tribe={tribe} />))\r\n            ) : (\r\n              <p>No tribes found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Display languages */}\r\n        <div className=\"languages-section\">\r\n          <h2>Languages</h2>\r\n          {console.log('speciesList:', languages)}\r\n          {console.log('Is speciesList an array?', Array.isArray(languages))}\r\n          <div className=\"cards-container\">\r\n            {languages.length > 0 ? (\r\n              languages.map((language) => (<LanguageCard key={language.id} language={language} />))\r\n            ) : (\r\n              <p>No languages found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}