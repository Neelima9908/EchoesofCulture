{"ast":null,"code":"var _jsxFileName = \"E:\\\\EchoesofCulture\\\\client\\\\src\\\\pages\\\\Comments.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport '../styles/Comments.css';\r\n\r\nconst Comments = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/Comment_API/comments')\r\n      .then((response) => response.json())\r\n      .then((data) => setComments(data))\r\n      .catch((error) => console.error('Error fetching comments:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <h1>Comments</h1>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>{comment.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;*/\n\nimport React, { useState, useEffect } from 'react';\n//import SpeciesCard from '../components/SpeciesCard'; // Ensure correct path to SpeciesCard component\nimport '../styles/Comments.css'; // Include your styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n\n  // Fetch species data on component mount\n  useEffect(() => {\n    const fetchSpecies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/Comment_API/comments');\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log('Fetched comments:', data);\n        console.log('Is data.comments an array?', Array.isArray(data.species));\n        setComments(data.species); // Update state with the species array\n      } catch (error) {\n        console.error('Failed to fetch species:', error);\n      }\n    };\n    fetchSpecies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), console.log('speciesList:', comments), console.log('Is speciesList an array?', Array.isArray(comments)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"species-grid\",\n      children: comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Comments","_s","comments","setComments","fetchSpecies","response","fetch","ok","Error","statusText","data","json","console","log","Array","isArray","species","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","comment","id","_c","$RefreshReg$"],"sources":["E:/EchoesofCulture/client/src/pages/Comments.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport '../styles/Comments.css';\r\n\r\nconst Comments = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/Comment_API/comments')\r\n      .then((response) => response.json())\r\n      .then((data) => setComments(data))\r\n      .catch((error) => console.error('Error fetching comments:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <h1>Comments</h1>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>{comment.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n//import SpeciesCard from '../components/SpeciesCard'; // Ensure correct path to SpeciesCard component\r\nimport '../styles/Comments.css'; // Include your styles\r\n\r\nconst Comments = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // Fetch species data on component mount\r\n  useEffect(() => {\r\n    const fetchSpecies = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/Comment_API/comments');\r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched comments:', data);\r\n        console.log('Is data.comments an array?', Array.isArray(data.species));\r\n        setComments(data.species); // Update state with the species array\r\n      } catch (error) {\r\n        console.error('Failed to fetch species:', error);\r\n      }\r\n    };\r\n  \r\n    fetchSpecies();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <h1>Comments</h1>\r\n      {console.log('speciesList:', comments)}\r\n    {console.log('Is speciesList an array?', Array.isArray(comments))}\r\n      <div className=\"species-grid\">\r\n        {comments.length > 0 ? (\r\n          comments.map((comment) => (\r\n            <li key={comment.id} >{comment}</li> \r\n          ))\r\n        ) : (\r\n          <p>Loading Comments</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,UAAU,EAAE,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;QACtCE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,KAAK,CAACC,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC,CAAC;QACtEb,WAAW,CAACO,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDb,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEL,OAAA;IAAKmB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCpB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBX,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEX,QAAQ,CAAC,EACvCU,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,KAAK,CAACC,OAAO,CAACb,QAAQ,CAAC,CAAC,eAC/DH,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BjB,QAAQ,CAACsB,MAAM,GAAG,CAAC,GAClBtB,QAAQ,CAACuB,GAAG,CAAEC,OAAO,iBACnB3B,OAAA;QAAAoB,QAAA,EAAuBO;MAAO,GAArBA,OAAO,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACpC,CAAC,gBAEFxB,OAAA;QAAAoB,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAxCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}